#!/usr/bin/env bash
# Forked  respin respun forked stolen and modified by DasGeek
# Tested w/ Elementary OS Loki & Ubuntu 17 and 18.04 LTS 
# Forked and spooned from some forum post I can no longer find in a galaxy of the internet
# Thank you to BigDaddyLinux and Skrappjaw for contributing!
# Version 2.1.0

## Define Temporary Directory Location - "ais" stands for "Auto Install Script"
tmp_dir=/tmp/ais

## Define some variables to make it less typing
install='apt install -y'
update='apt update; apt upgrade -y'
user=$USER



## Check if snapd has been installed just in case
check_snap () {
	if ! [ -e /usr/lib/snapd ] ; then
		$install snapd -y
	fi
}

check_flatpak () {
	if ! [ -e /usr/bin/flatpak ] ; then
		$install flatpak -y
	fi
}

## Start script
if [[ $EUID -ne 0 ]]; then
   	echo "This script must be run as root type: sudo ./installscript" 
   	exit 1
else
	#Update and Upgrade
	echo "Updating and Upgrading"
	$update

	echo "Creating temporary folder"
	mkdir $tmp_dir
	
	$install dialog 
	cmd=(dialog --title "DasGeek Installer" --separate-output --checklist "Please Select Software You Want To Install:" 22 80 16)
	options=(
		#A "<----Category: Software Repositories---->" on
			1_repos "	Install Flatpak Repository" off
			2_repos "	Install Snaps Repository" off
		#B "<----Category: Notes---->" on 
	        1_notes "	Simplenote (Flatpak)" off
	        2_notes "	Standard Notes (Flatpak)" off
	    #C "<----Category: Social---->" on
			1_social "	Mumble Client" off
	        2_social "	Zoom Meeting Client (Flatpak)" off
	        3_social "	Telegram (Flatpak)" off
	        4_social "	Discord (Flatpak)" off
	        5_social "	Hexchat" off
	        6_social "	Signal (Flatpak)" off
	        7_social "	Element/Matrix (Flatpak)" off
	    #D "<----Category: Tweaks---->" on
	        1_tweak "	Elementary Tweaks" off
	        2_tweak "	Ubuntu Restricted Extras" off
	        3_tweak "	Gnome Tweak Tool" off
	        4_tweak "	Xfce Monitor Move Script" off
	        5_tweak "	Midnight Commander" off
	        6_tweak "	Install i3wm DE" off
	    #E "<----Category: Media---->" on  
	        1_media "	SM Player Media Player" off
	        2_media "	Pithos (Pandora)" off
	    	3_media "	Google Desktop Player (Flatpak)" off
	    #F "<----Category: Internet---->" on
	        1_internet "	Google Chrome(Flatpak)" off
	        2_internet "	Vivaldi" off
	       	3_internet "	Firefox Browser" off     	
	       	4_internet "	Chromium (Flatpak)" off     
	    #G "<----Category: Video, Audio & Pic Editing---->" on
	        1_edit "	Kdenlive" off
	        2_edit "	Shotwell" off
	        3_edit "	GIMP" off
	        4_edit "	OBS-Studio (Flatpak)" off
	        5_edit "	OBS-Studio (SNAP)" off
	        6_edit "	Audacity" off
	        7_edit "	ffmpeg" off
	        8_edit "	OcenAudio" off
		#H "<----Category: Security---->" on
			1_security " Mullvad VPN" off
		#I "<----Category: Utility---->" on
		    1_utility "	Virtualbox" off
		    2_utility "	KXStudio Jack Setup (Advanced Audio)" off
		    3_utility "	Fedora Media Writer (Flatpak)" off
			4_utility "	Tilix" off
			5_utility "	Terminator" off
			6_utility "	Synology NAS Backup (Flatpak)" off
			7_utility "	Gnome-do (Search Tool)" off
            8_utility "	Catfish - (File Search)" off
			9_utility "	Guvcview (webcam settings)" off
			10_utility "	Cheese" off	
			11_utility "	Fish (command line shell)" off
			12_utility "	KVM" off
			13_utility " Docker(CE)" off
		#J "<----Category: Coding & FTP---->" on
			1_coding "	Pycharm Pro (Pycharm Tools Flatpak)" off
	    	2_coding "	Sublime Text(Flatpak)" off # any option can be set to default to "on"
			3_coding "	Putty" off
			4_coding "	VS Codium(Flatpak)" off
            5_coding "	Gedit" off
	        6_coding "	Filezilla" off
	        7_coding "	Snapcraft (For Snap Dev)" off
		#K "<----Category: Gaming & Fun---->" on
			1_gaming "	Steam (Valve)" off
			2_gaming "	Lutris" off
			3_gaming "	DOSBox-X (SNAP)" off
			4_gaming "	ScummVM (SNAP)" off
			5_gaming "	Gnome Twitch Client" off
			6_gaming "	Kisak-mesa PPA Latest AMD Drivers (Risky)" off		
		L "Post Install Auto Clean Up & Update" off)
		choices=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
		clear
		for choice in $choices
		do
		    case $choice in
# Section A ------------repos----------------------
	        1_repos)	
				#Install Flatpak Repo (Software Repository)
				echo "Installing Flatpak Repository"
				$install flatpak -y
				flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
				sleep 1
				;;

			2_repos)	
				#Install Snap Repository (Software Repository)
				echo "Installing Snap Repository"
				check_snap
				sleep 1
				;;
# Section B -------notes---------------------------

			1_notes)
			    #Simplenote (Flatpak)
				echo "Installing Simplenote"
				check_flatpak
				flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
				flatpak install flathub com.simplenote.Simplenote -y
				sleep 1
				;;

			2_notes)
				# Standard Notes (Flatpak)
				echo "Installing Standard Notes"
				check_flatpak
				flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
				flatpak install flathub org.standardnotes.standardnotes -y
				sleep1
				;;

# Section C --------social-------------------------

			1_social)
				#Mumble Client
				echo "Installing Mumble"
				add-apt-repository ppa:mumble/release
				apt update
				$install mumble
				sleep 1
				;;		

			2_social)
				#Zoom (Flatpak)
				echo "Installing Zoom Meeting Client"
				check_flatpak
				flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
				flatpak install flathub us.zoom.Zoom -y
				sleep 1
				;;
				
			3_social)
				#Telegram
				echo "Telegram (Flatpak)"
				check_flatpak
				flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
				flatpak install flathub org.telegram.desktop -y
				sleep 1
				;;

			4_social)
				#Discord
				echo "Installing Discord (Flatpak)"
				check_flatpak
				flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
				flatpak install flathub com.discordapp.Discord -y
				sleep 1
				;;

			5_social)	
				#Hexchat
				echo "Installing Hexchat"
				$install hexchat
				sleep 1
				;;
			
			6_social) 
				#Signal (Flatpak)
				echo "Installing Signal Messenger (Flatpak)"
				check_flatpak
				flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
				flatpak install flathub org.signal.Signal -y
				sleep 1
    			;;

    		7_social)
    			#Element (Flatpak)
    			echo "Installing Element (Flatpak)"
    			check_flatpak
    			flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
    			flatpak install flathub im.riot.Riot -y
                sleep 1
				;;

# Section D -----------tweak-----------------------

			1_tweak)
				#Elementary OS Tweaks
				echo "Installing Elementary Tweaks"
				$install software-properties-common
				$install elementary-tweaks 
				sleep 1
				;;
			2_tweak)
				#Ubuntu Restricted Extras
				echo "Installing Ubuntu Restricted Extras"
				$install ubuntu-restricted-extras
				sleep 1
				;;
			
			3_tweak)
				#Gnome tweak tool
				echo "Installing Gnome Tweak Tool"
				$install gnome-tweak-tool
				sleep 1
				;;

			4_tweak) 
				#Install monitor move window script Xfce
				echo "Downloading Monitor move window script"
				wget https://raw.githubusercontent.com/dasgeekchannel/move-to-next-monitor/master/move-to-next-monitor -O /home/$USER/Documents/move-to-next-monitor
				chmod +x ~/Documents/move-to-next-monitor
		    	chown -R $USER:$USER ~/Documents/move-to-next-monitor
		    	echo "Script now resides at /home/$USER/Documents/move-to-next-monitor"
				sleep 1
				;;

			5_tweak)
				#Install Midnight Commander
				echo "Install Midnight Commander"
				$install mc
				;;

			6_tweak)
				#Install i3wm
				echo "Installing i3wm & config"
				$install i3 i3status dmenu i3lock xbacklight feh conky
				#Use XFCE panel instead of default i3 and xfce plugins
				$install xfwm4 xfce4-statusnotifier-plugin xfce4-statusnotifier-plugin
				$install xfce4-pulseaudio-plugin xfce4-sensors-plugin xfce4-battery-plugin
				$install xfce4-panel xfce4-clipman-plugin xfce4-session xfce4-whiskermenu-plugin
				$install xfce4-mount-plugin xfce4-kbdleds-plugin
				# Installs compton to prevent screen tearing
				sleep 2
				$install compton unclutter 
				#hides mouse when not in use.
				#customize and theme
				$install lxappearance menulibre 
				sleep 2
				mkdir /home/$USER/.config/i3
				sleep 2
				wget https://github.com/dasgeekchannel/i3wmFedora28Config/raw/master/i3wallpaper.png -O /home/$USER/Pictures/i3wallpaper.png
				wget https://raw.githubusercontent.com/dasgeekchannel/i3wmFedora28Config/master/compton.conf -O /home/$USER/.config/compton.conf
                wget https://raw.githubusercontent.com/dasgeekchannel/i3wmFedora28Config/master/config -O  /home/$USER/.config/i3/config
                		sleep 2
                		wget https://github.com/dasgeekchannel/i3wmFedora28Config/raw/master/xfce4.zip
                		#wget https://github.com/dasgeekchannel/i3wmFedora28Config/archive/master.zip
                		#unzip master.zip
                		unzip xfce4.zip
                		sleep 2
                		#move current xfce settings to xfce4backup
                		mv /home/$USER/.config/xfce4 /home/$USER/.config/xfce4backup
                		#moves downloaded xfce4 config in place
                		sleep 2
                		mv xfce4 /home/$USER/.config/
                sleep 2
                wget https://github.com/dasgeekchannel/i3wmFedora28Config/raw/master/xfce4.zip
                #wget https://github.com/dasgeekchannel/i3wmFedora28Config/archive/master.zip
                #unzip master.zip
                unzip xfce4.zip
                sleep 2
                #move current xfce settings to xfce4backup
                mv /home/$USER/.config/xfce4 /home/$USER/.config/xfce4backup
                #moves downloaded xfce4 config in place
                sleep 2
                mv xfce4 /home/$USER/.config/
				sleep 2
				chown -R $USER:$USER /home/$USER/.config/compton.conf
				chown -R $USER:$USER /home/$USER/Pictures/i3wallpaper.png
				chown -R $USER:$USER /home/$USER/.config/xfce4
				chown -R $USER:$USER /home/$USER/.config/i3
				;;

# Section E -------------media---------------------

			1_media)
				#SMPlayer
				echo "Installing SMPlayer"
				$install smplayer 
				sleep 1
				;;

			2_media) 
				#Pithos
				echo "Installing Pithos"
				$install pithos 
				sleep 1
				;;

			3_media) 
				#Google Music Desktop Player (Flatpak)
				echo "Installing Google Desktop Player (Flatpak)"
				check_flatpak
				flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
				flatpak install flathub com.googleplaymusicdesktopplayer.GPMDP -y
				sleep 1
				;;

# Section F -------------internet--------------------
			1_internet)
				#Chrome (Flatpak)
				echo "Installing Google Chrome"
				check_flatpak
				flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
				flatpak install flathub com.google.Chrome -y
				;;

			2_internet)
				#Vivaldi
				echo "Installing Vivaldi"			
				wget https://downloads.vivaldi.com/stable/vivaldi-stable_5.4.2753.33-1_amd64.deb -O /tmp/ais/vivaldi.deb
				dpkg -i /tmp/ais/vivaldi.deb
				$install -f 
				;;

			3_internet)
				#Firefox Browser
				echo "Firefox"
				$install firefox 
				;;


			4_internet) 
				#Chromium (Flatpak)
				echo "Installing Chromium"
				check_flatpak
				flatpak install flathub org.chromium.Chromium -y
				sleep 1
			;;

	# Section G -------------edit(Video/Audio/Pic)---------------------	
			1_edit)
				#Kdenlive
				echo "Installing Kdenlive"
				$install kdenlive breeze-icon-theme vlc frei0r-plugins dvdauthor 
				sleep 1
				;;
				
			2_edit)	
				#Shotwell
				echo "Installing Shotwell"
				$install shotwell 
				sleep 1
				;;            
    		
			3_edit)
				#GIMP (SNAP)
				echo "Installing GIMP"
				check_snap
				snap install gimp --edge
				sleep 1
				;;

			4_edit)
				#OBS Studio (Flatpak)
				echo "Installing OBS Studio"
				$install ffmpeg 
				check_flatpak
				flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
				flatpak install flathub com.obsproject.Studio -y
				sleep 1
				;;

			5_edit)
				#OBS Studio (SNAP)
				echo "Installing OBS Studio (SNAP)"	
				check_snap
				snap install obs-studio
				;;

			6_edit) 
				#Audacity
				echo "installing Audacity"
				$install audacity 
				sleep 1
				;;

			7_edit) 
				#ffmpeg 
				echo "Installing ffmpeg"
				$install ffmpeg
				sleep 1
				;;
			
			8_edit)
				#OcenAudio Editor
				echo "Installing OcenAudio"
				wget -O $tmp_dir/ocenaudio.deb https://www.ocenaudio.com/start_download/ocenaudio_debian64.deb
				dpkg -i $tmp_dir/ocenaudio.deb
				sleep 1
				;;

	# Section H -----------security-----------------------	
			1_security)	
				#Mullvad VPN
				echo "Mullvad VPN"				
				wget -O $tmp_dir/mullvad.deb https://mullvad.net/download/app/deb/latest/ 
				dpkg -i $tmp_dir/mullvad.deb
				sleep 1
				;;

	
	# Section I ----------utility------------------------	

    		1_utility)	
    			#Virtualbox
				echo "Installing Virtualbox"
				$install virtualbox 
				sleep 1
				;;

			2_utility) 
				#Advanced Jack Audio Setup
				## TODO: Clean this up -> the debs need to be labeled for easier understanding
				## and all of the "$install" lines should be collapsed into one single line. Unable to test at
				## current moment.
				echo "Installing KXStudio Jack"
				# Install required dependencies if needed
				$install apt-transport-https software-properties-common libglibmm
				# Download the files
				cd $tmp_dir
				wget https://launchpad.net/~kxstudio-debian/+archive/kxstudio/+files/kxstudio-repos_9.5.1~kxstudio3_all.deb
				wget https://launchpad.net/~kxstudio-debian/+archive/kxstudio/+files/kxstudio-repos-gcc5_9.5.1~kxstudio3_all.deb
				# Install it
				dpkg -i kxstudio-repos_9.5.1~kxstudio3_all.deb
				dpkg -i kxstudio-repos-gcc5_9.5.1~kxstudio3_all.deb
				usermod -a -G audio $USER
				$update
				$install jackd2 jackd2-firewire carla-git cadence non-mixer pulseaudio-module-jack mididings 
				# Download auto script github
				mkdir ~/jacksetup
				wget -O ~/jacksetup/start_jack.sh https://raw.githubusercontent.com/Skrappjaw/audio-scripts/master/start_jack.sh
				chmod +x ~/jacksetup/start_jack.sh
				chown -R $USER:$USER ~/jacksetup
				# Optional to put script into autostart
				#cd ~/
				#cp ~/jacksetup/start_jack.sh /etc/init.d/
				#update-rc.d start_jack.sh defaults
				;; 

			3_utility) 
				#Fedora Media Writer
				echo "Fedora Media Writer"
				flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
				flatpak install flathub org.fedoraproject.MediaWriter -y
				sleep 1
				;;

			4_utility) 
				#Tilix (Tiling Terminal)
				echo "Installing Tilix"
				$install tilix 
				sleep 1
				;;

			5_utility)
				#Skynet/Terminator
				echo "Installing Terminator"
				$install terminator 
				sleep 1
				;;

			6_utility) 
				#Synology NAS Assistant & Backup
				echo "Installing Syn Assist and Syn Drive"
				flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
				flatpak install flathub com.synology.CloudStationBackup
				flatpak install flathub com.synology.SynologyDrive
				sleep 1

				;;

			7_utility) 
				#Gnome-do
				echo "Installing GnomeDo"
				$install gnome-do gnome-do-plugins
				sleep 1
				;;

			8_utility) 
				#Install Catfish
				echo "Installing Catfish"
				$install catfish

				sleep 1
				;;

			9_utility) 
				#Guvcview
				echo "Installing Guvcview"
				$install libgsl2 libguvcview guvcview 
				sleep 1
				;;

			10_utility) 
				#Cheese
				echo "Installing Cheese"
				$install cheese 
				sleep 1
				;;
			
			11_utility) 
				#Fish
				echo "Installing Fish"
				$install fish 
				sleep 1
				;;

			12_utility)
				#kvm
				echo "Installing KVM"
				$install qemu-kvm libvirt-bin bridge-utils virt-manager virtinst virt-viewer firewalld ebtables iptables qemu libspice-client-gtk-3.0-dev  
				sleep 1
				addgroup libvirtd
				adduser $USER libvirtd
				systemctl restart libvirtd
				sleep 1
				;;
				
			13_utility) #Docker
				echo "Installing Docker"
				$install apt-transport-https ca-certificates curl software-properties-common
				wget -O - https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
				echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list
				apt update
				$install docker-ce 
				;;
        
	# Section J -----------coding-----------------------	

			1_coding) 	
				#Python Tools (Dev Testing)
				echo "Installing Python Tools"
				#Install PIP, packages, dev tools, and Pycharm
				$install python3-pip build-essential libssl-dev libffi-dev python-dev openjdk-8-jdk python3-setuptools 

				#Install Flatpak
				echo "Installing Pycharm Pro"
				check_flatpak
				flatpak install flathub com.jetbrains.PyCharm-Professional -y
				sleep 1
				;;

	        2_coding)
	            #Install Sublime Text*
				echo "Installing Sublime Text"
				flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
				flatpak install flathub com.sublimetext.three -y
				sleep 1
				;;


			3_coding)	
				#Putty
				echo "Installing Putty"
				$install putty
				sleep 1
				;;

			4_coding)
				#VSCodium - Visual Studio Code
				echo "VSCodium"
				check_flatpak
				flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
				flatpak install flathub com.vscodium.codium -y
				sleep 1
				;;
	
			5_coding)	
				#Install Gedit
				echo "Gedit"
				$install gedit
				sleep 1
				;;
			
			6_coding)
				#Filezilla (not related to Godzilla)
				echo "Installing Filezilla"
				$install filezilla 
				sleep 1
				;;

			7_coding)
				#SnapCraft
				$install snapcraft build-essential 
				mkdir -p ~/mysnaps
				chown -R $USER:$USER ~/mysnaps
				;;

			1_gaming)
				#Steam
				echo "Installing Steam"				
				$install steam 
				sleep 1
				;;

			2_gaming)
				#Lutris
				echo "Installing Lutris"
				add-apt-repository ppa:lutris-team/lutris
				apt update
				$install lutris
				;;

			3_gaming) 
				#DOSBox-X (SNAP)
				echo "Installing DOSBox-X"
				check_snap
				snap install dosbox-x
				;;
			
			4_gaming)
				#ScummVM (SNAP)
				echo "Installing ScummVM"
				check_snap
				snap install scummvm
				;;

			5_gaming) 
				#Gnome Twitch Client
				echo "Installing Gnome Twitch client"
				$install gnome-twitch 
				;;
			
			6_gaming)
				#Install AMD Drivers kisak-mesa ppa
				echo "Installing PPA latest Mesa Drivers"
				add-apt-repository ppa:kisak/kisak-mesa
				apt update
				apt upgrade
				;;
			
			L)  
				#Clean up
				echo "Cleaning up"
				$update
				apt autoremove -y
				rm -rf $tmp_dir
				;;
	
	    esac
	done
fi
